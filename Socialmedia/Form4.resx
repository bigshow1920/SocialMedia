<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>